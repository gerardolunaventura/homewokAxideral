// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>Script2</b><br>
 * Generated     : <b>2018/07/18 15:51:42</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 amd64 6.1 <br>
 * 
 * @since  julio 18, 2018
 * @author DELL
 */
public abstract class Script2Helper extends RationalTestScript
{
	/**
	 * Aceptar: with default state.
	 *		.class : javax.swing.plaf.basic.BasicOptionPaneUI$ButtonFactory$ConstrainedButton
	 * 		accessibleContext.accessibleName : Aceptar
	 * 		name : OptionPane.button
	 * 		.classIndex : 0
	 */
	protected GuiTestObject aceptar() 
	{
		return new GuiTestObject(
                        getMappedTestObject("aceptar"));
	}
	/**
	 * Aceptar: with specific test context and state.
	 *		.class : javax.swing.plaf.basic.BasicOptionPaneUI$ButtonFactory$ConstrainedButton
	 * 		accessibleContext.accessibleName : Aceptar
	 * 		name : OptionPane.button
	 * 		.classIndex : 0
	 */
	protected GuiTestObject aceptar(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("aceptar"), anchor, flags);
	}
	
	/**
	 * AddToOrder: with default state.
	 *		.class : javax.swing.JButton
	 * 		.priorLabel : $0.00
	 * 		accessibleContext.accessibleName : Add to Order
	 * 		.classIndex : 0
	 */
	protected GuiTestObject addToOrder() 
	{
		return new GuiTestObject(
                        getMappedTestObject("addToOrder"));
	}
	/**
	 * AddToOrder: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		.priorLabel : $0.00
	 * 		accessibleContext.accessibleName : Add to Order
	 * 		.classIndex : 0
	 */
	protected GuiTestObject addToOrder(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("addToOrder"), anchor, flags);
	}
	
	/**
	 * Album: with default state.
	 *		.class : javax.swing.JTabbedPane
	 * 		tabCount : 2
	 * 		accessibleContext.accessibleName : Album
	 * 		.tabs : {Album,Details}
	 * 		name : tabbedPane
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject album() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("album"));
	}
	/**
	 * Album: with specific test context and state.
	 *		.class : javax.swing.JTabbedPane
	 * 		tabCount : 2
	 * 		accessibleContext.accessibleName : Album
	 * 		.tabs : {Album,Details}
	 * 		name : tabbedPane
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject album(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("album"), anchor, flags);
	}
	
	/**
	 * Cancel: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Cancel
	 * 		name : cancel-orderForm
	 * 		.classIndex : 2
	 */
	protected GuiTestObject cancel() 
	{
		return new GuiTestObject(
                        getMappedTestObject("cancel"));
	}
	/**
	 * Cancel: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Cancel
	 * 		name : cancel-orderForm
	 * 		.classIndex : 2
	 */
	protected GuiTestObject cancel(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("cancel"), anchor, flags);
	}
	
	/**
	 * CancelSelectedOrder: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Cancel Selected Order
	 * 		name : cancelOrder-cancelselected
	 * 		.classIndex : 0
	 */
	protected GuiTestObject cancelSelectedOrder() 
	{
		return new GuiTestObject(
                        getMappedTestObject("cancelSelectedOrder"));
	}
	/**
	 * CancelSelectedOrder: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Cancel Selected Order
	 * 		name : cancelOrder-cancelselected
	 * 		.classIndex : 0
	 */
	protected GuiTestObject cancelSelectedOrder(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("cancelSelectedOrder"), anchor, flags);
	}
	
	/**
	 * CityStateZip: with default state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : City, State, Zip:
	 * 		name : .cszField
	 * 		.classIndex : 7
	 */
	protected TextGuiSubitemTestObject cityStateZip() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("cityStateZip"));
	}
	/**
	 * CityStateZip: with specific test context and state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : City, State, Zip:
	 * 		name : .cszField
	 * 		.classIndex : 7
	 */
	protected TextGuiSubitemTestObject cityStateZip(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("cityStateZip"), anchor, flags);
	}
	
	/**
	 * ClassicsCD: with default state.
	 *		.captionText : ClassicsCD
	 * 		.class : ClassicsJava
	 * 		accessibleContext.accessibleName : ClassicsCD
	 * 		.processName : javaw.exe
	 */
	protected TopLevelTestObject classicsCD() 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("classicsCD"));
	}
	/**
	 * ClassicsCD: with specific test context and state.
	 *		.captionText : ClassicsCD
	 * 		.class : ClassicsJava
	 * 		accessibleContext.accessibleName : ClassicsCD
	 * 		.processName : javaw.exe
	 */
	protected TopLevelTestObject classicsCD(TestObject anchor, long flags) 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("classicsCD"), anchor, flags);
	}
	
	/**
	 * Close: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Close
	 * 		name : close-order
	 * 		.classIndex : 1
	 */
	protected GuiTestObject close() 
	{
		return new GuiTestObject(
                        getMappedTestObject("close"));
	}
	/**
	 * Close: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Close
	 * 		name : close-order
	 * 		.classIndex : 1
	 */
	protected GuiTestObject close(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("close"), anchor, flags);
	}
	
	/**
	 * Details: with default state.
	 *		.class : javax.swing.JTabbedPane
	 * 		tabCount : 2
	 * 		accessibleContext.accessibleName : Details
	 * 		.tabs : {Album,Details}
	 * 		name : tabbedPane
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject details() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("details"));
	}
	/**
	 * Details: with specific test context and state.
	 *		.class : javax.swing.JTabbedPane
	 * 		tabCount : 2
	 * 		accessibleContext.accessibleName : Details
	 * 		.tabs : {Album,Details}
	 * 		name : tabbedPane
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject details(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("details"), anchor, flags);
	}
	
	/**
	 * existingTable: with default state.
	 *		.class : javax.swing.JTable
	 * 		.priorLabel : Order for Susan Flontly
	 * 		name : existingTable
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject existingTable() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("existingTable"));
	}
	/**
	 * existingTable: with specific test context and state.
	 *		.class : javax.swing.JTable
	 * 		.priorLabel : Order for Susan Flontly
	 * 		name : existingTable
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject existingTable(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("existingTable"), anchor, flags);
	}
	
	/**
	 * jmb: with default state.
	 *		.class : javax.swing.JMenuBar
	 * 		name : jmb
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject jmb() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("jmb"));
	}
	/**
	 * jmb: with specific test context and state.
	 *		.class : javax.swing.JMenuBar
	 * 		name : jmb
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject jmb(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("jmb"), anchor, flags);
	}
	
	/**
	 * Name: with default state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : Name:
	 * 		name : .nameField-cust
	 * 		.classIndex : 5
	 */
	protected TextGuiSubitemTestObject name() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("name"));
	}
	/**
	 * Name: with specific test context and state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : Name:
	 * 		name : .nameField-cust
	 * 		.classIndex : 5
	 */
	protected TextGuiSubitemTestObject name(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("name"), anchor, flags);
	}
	
	/**
	 * nameComboB: with default state.
	 *		.itemCount : 16
	 * 		.itemText : {Trent Culpito,Susan Flontly,Emma Trenchenza,Claire Stratus,Rick Tumbler,Tony Mi ...
	 * 		.class : javax.swing.JComboBox
	 * 		.priorLabel : Full Name:
	 * 		name : nameComboB
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject nameComboB() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("nameComboB"));
	}
	/**
	 * nameComboB: with specific test context and state.
	 *		.itemCount : 16
	 * 		.itemText : {Trent Culpito,Susan Flontly,Emma Trenchenza,Claire Stratus,Rick Tumbler,Tony Mi ...
	 * 		.class : javax.swing.JComboBox
	 * 		.priorLabel : Full Name:
	 * 		name : nameComboB
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject nameComboB(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("nameComboB"), anchor, flags);
	}
	
	/**
	 * NewCustomer: with default state.
	 *		text : New Customer
	 * 		.class : javax.swing.JRadioButton
	 * 		.priorLabel : Choose One: 
	 * 		accessibleContext.accessibleName : New Customer
	 * 		name : radioButtonA
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject newCustomer() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("newCustomer"));
	}
	/**
	 * NewCustomer: with specific test context and state.
	 *		text : New Customer
	 * 		.class : javax.swing.JRadioButton
	 * 		.priorLabel : Choose One: 
	 * 		accessibleContext.accessibleName : New Customer
	 * 		name : radioButtonA
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject newCustomer(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("newCustomer"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName :   OK  
	 * 		name : ok-statuslogon2
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ok() 
	{
		return new GuiTestObject(
                        getMappedTestObject("ok"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName :   OK  
	 * 		name : ok-statuslogon2
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ok(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("ok"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName :   OK  
	 * 		name : ok-orderlogon
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ok2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("ok2"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName :   OK  
	 * 		name : ok-orderlogon
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ok2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("ok2"), anchor, flags);
	}
	
	/**
	 * Password: with default state.
	 *		.class : javax.swing.JPasswordField
	 * 		.priorLabel : Password:
	 * 		name : .passText-classicslogon
	 * 		.classIndex : 0
	 */
	protected TextGuiSubitemTestObject password() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("password"));
	}
	/**
	 * Password: with specific test context and state.
	 *		.class : javax.swing.JPasswordField
	 * 		.priorLabel : Password:
	 * 		name : .passText-classicslogon
	 * 		.classIndex : 0
	 */
	protected TextGuiSubitemTestObject password(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("password"), anchor, flags);
	}
	
	/**
	 * Phone: with default state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : Phone:
	 * 		name : .phoneField
	 * 		.classIndex : 8
	 */
	protected TextGuiSubitemTestObject phone() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("phone"));
	}
	/**
	 * Phone: with specific test context and state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : Phone:
	 * 		name : .phoneField
	 * 		.classIndex : 8
	 */
	protected TextGuiSubitemTestObject phone(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("phone"), anchor, flags);
	}
	
	/**
	 * PlaceAnOrder: with default state.
	 *		.captionText : Place an Order
	 * 		.class : javax.swing.JFrame
	 * 		accessibleContext.accessibleName : Place an Order
	 * 		.processName : javaw.exe
	 * 		name : orderForm
	 */
	protected TopLevelTestObject placeAnOrder() 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("placeAnOrder"));
	}
	/**
	 * PlaceAnOrder: with specific test context and state.
	 *		.captionText : Place an Order
	 * 		.class : javax.swing.JFrame
	 * 		accessibleContext.accessibleName : Place an Order
	 * 		.processName : javaw.exe
	 * 		name : orderForm
	 */
	protected TopLevelTestObject placeAnOrder(TestObject anchor, long flags) 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("placeAnOrder"), anchor, flags);
	}
	
	/**
	 * PlaceOrder: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Place Order
	 * 		name : placeOrderButton2
	 * 		.classIndex : 0
	 */
	protected GuiTestObject placeOrder() 
	{
		return new GuiTestObject(
                        getMappedTestObject("placeOrder"));
	}
	/**
	 * PlaceOrder: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Place Order
	 * 		name : placeOrderButton2
	 * 		.classIndex : 0
	 */
	protected GuiTestObject placeOrder(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("placeOrder"), anchor, flags);
	}
	
	/**
	 * PlaceOrder: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Place Order
	 * 		name : placeOrder
	 * 		.classIndex : 1
	 */
	protected GuiTestObject placeOrder2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("placeOrder2"));
	}
	/**
	 * PlaceOrder: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Place Order
	 * 		name : placeOrder
	 * 		.classIndex : 1
	 */
	protected GuiTestObject placeOrder2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("placeOrder2"), anchor, flags);
	}
	
	/**
	 * RelatedItems: with default state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Related Items
	 * 		name : relatedItems
	 * 		.classIndex : 0
	 */
	protected GuiTestObject relatedItems() 
	{
		return new GuiTestObject(
                        getMappedTestObject("relatedItems"));
	}
	/**
	 * RelatedItems: with specific test context and state.
	 *		.class : javax.swing.JButton
	 * 		accessibleContext.accessibleName : Related Items
	 * 		name : relatedItems
	 * 		.classIndex : 0
	 */
	protected GuiTestObject relatedItems(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("relatedItems"), anchor, flags);
	}
	
	/**
	 * RememberPassword: with default state.
	 *		text : Remember Password
	 * 		.class : javax.swing.JCheckBox
	 * 		accessibleContext.accessibleName : Remember Password
	 * 		name : check-rememberpassword2
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject rememberPassword() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("rememberPassword"));
	}
	/**
	 * RememberPassword: with specific test context and state.
	 *		text : Remember Password
	 * 		.class : javax.swing.JCheckBox
	 * 		accessibleContext.accessibleName : Remember Password
	 * 		name : check-rememberpassword2
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject rememberPassword(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("rememberPassword"), anchor, flags);
	}
	
	/**
	 * Street: with default state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : Street:
	 * 		name : .streetField
	 * 		.classIndex : 6
	 */
	protected TextGuiSubitemTestObject street() 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("street"));
	}
	/**
	 * Street: with specific test context and state.
	 *		.class : javax.swing.JTextField
	 * 		.priorLabel : Street:
	 * 		name : .streetField
	 * 		.classIndex : 6
	 */
	protected TextGuiSubitemTestObject street(TestObject anchor, long flags) 
	{
		return new TextGuiSubitemTestObject(
                        getMappedTestObject("street"), anchor, flags);
	}
	
	/**
	 * tree2: with default state.
	 *		.class : javax.swing.JTree
	 * 		name : tree2
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject tree2() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("tree2"));
	}
	/**
	 * tree2: with specific test context and state.
	 *		.class : javax.swing.JTree
	 * 		name : tree2
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject tree2(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("tree2"), anchor, flags);
	}
	
	/**
	 * ViewOrderStatus: with default state.
	 *		.captionText : View Order Status
	 * 		.class : javax.swing.JFrame
	 * 		accessibleContext.accessibleName : View Order Status
	 * 		.processName : javaw.exe
	 * 		name : logFrame2Status
	 */
	protected TopLevelTestObject viewOrderStatus() 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("viewOrderStatus"));
	}
	/**
	 * ViewOrderStatus: with specific test context and state.
	 *		.captionText : View Order Status
	 * 		.class : javax.swing.JFrame
	 * 		accessibleContext.accessibleName : View Order Status
	 * 		.processName : javaw.exe
	 * 		name : logFrame2Status
	 */
	protected TopLevelTestObject viewOrderStatus(TestObject anchor, long flags) 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("viewOrderStatus"), anchor, flags);
	}
	
	

	protected Script2Helper()
	{
		setScriptName("Script2");
	}
	
}

